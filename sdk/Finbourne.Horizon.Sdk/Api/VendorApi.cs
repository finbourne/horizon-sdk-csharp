/*
 * FINBOURNE Horizon API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Finbourne.Horizon.Sdk.Client;
using Finbourne.Horizon.Sdk.Client.Auth;
using Finbourne.Horizon.Sdk.Model;

namespace Finbourne.Horizon.Sdk.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVendorApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity.
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;LusidField&gt;</returns>
        List<LusidField> GetCoreFieldMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0);

        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;LusidField&gt;</returns>
        ApiResponse<List<LusidField>> GetCoreFieldMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0);
        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;</returns>
        Dictionary<string, LusidPropertyDefinitionOverrides> GetOptionalMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0);

        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;</returns>
        ApiResponse<Dictionary<string, LusidPropertyDefinitionOverrides>> GetOptionalMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0);
        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;LusidPropertyToVendorFieldMapping&gt;</returns>
        List<LusidPropertyToVendorFieldMapping> GetPropertyMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0);

        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;LusidPropertyToVendorFieldMapping&gt;</returns>
        ApiResponse<List<LusidPropertyToVendorFieldMapping>> GetPropertyMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0);
        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities.
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PagedResourceListOfVendorProduct</returns>
        PagedResourceListOfVendorProduct QueryVendors(QueryRequest queryRequest, int operationIndex = 0);

        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PagedResourceListOfVendorProduct</returns>
        ApiResponse<PagedResourceListOfVendorProduct> QueryVendorsWithHttpInfo(QueryRequest queryRequest, int operationIndex = 0);
        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;</returns>
        Dictionary<string, LusidPropertyDefinitionOverridesResponse> SetOptionalMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0);

        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;</returns>
        ApiResponse<Dictionary<string, LusidPropertyDefinitionOverridesResponse>> SetOptionalMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVendorApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;LusidField&gt;</returns>
        System.Threading.Tasks.Task<List<LusidField>> GetCoreFieldMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;LusidField&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<LusidField>>> GetCoreFieldMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;</returns>
        System.Threading.Tasks.Task<Dictionary<string, LusidPropertyDefinitionOverrides>> GetOptionalMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Dictionary<string, LusidPropertyDefinitionOverrides>>> GetOptionalMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;LusidPropertyToVendorFieldMapping&gt;</returns>
        System.Threading.Tasks.Task<List<LusidPropertyToVendorFieldMapping>> GetPropertyMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;LusidPropertyToVendorFieldMapping&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<LusidPropertyToVendorFieldMapping>>> GetPropertyMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PagedResourceListOfVendorProduct</returns>
        System.Threading.Tasks.Task<PagedResourceListOfVendorProduct> QueryVendorsAsync(QueryRequest queryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PagedResourceListOfVendorProduct)</returns>
        System.Threading.Tasks.Task<ApiResponse<PagedResourceListOfVendorProduct>> QueryVendorsWithHttpInfoAsync(QueryRequest queryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;</returns>
        System.Threading.Tasks.Task<Dictionary<string, LusidPropertyDefinitionOverridesResponse>> SetOptionalMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Dictionary<string, LusidPropertyDefinitionOverridesResponse>>> SetOptionalMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVendorApi : IVendorApiSync, IVendorApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class VendorApi : IVendorApi
    {
        private Finbourne.Horizon.Sdk.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="VendorApi"/> class.
        /// </summary>
        /// <returns></returns>
        public VendorApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VendorApi"/> class.
        /// </summary>
        /// <returns></returns>
        public VendorApi(string basePath)
        {
            this.Configuration = Finbourne.Horizon.Sdk.Client.Configuration.MergeConfigurations(
                Finbourne.Horizon.Sdk.Client.GlobalConfiguration.Instance,
                new Finbourne.Horizon.Sdk.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Finbourne.Horizon.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Finbourne.Horizon.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Finbourne.Horizon.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VendorApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public VendorApi(Finbourne.Horizon.Sdk.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = configuration;
            this.Client = new Finbourne.Horizon.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Finbourne.Horizon.Sdk.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Finbourne.Horizon.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VendorApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public VendorApi(Finbourne.Horizon.Sdk.Client.ISynchronousClient client, Finbourne.Horizon.Sdk.Client.IAsynchronousClient asyncClient, Finbourne.Horizon.Sdk.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Finbourne.Horizon.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Finbourne.Horizon.Sdk.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Finbourne.Horizon.Sdk.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Finbourne.Horizon.Sdk.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Finbourne.Horizon.Sdk.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;LusidField&gt;</returns>
        public List<LusidField> GetCoreFieldMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidField>> localVarResponse = GetCoreFieldMappingsForProductEntityWithHttpInfo(vendorName, productName, lusidEntityType, lusidEntitySubType);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;LusidField&gt;</returns>
        public Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidField>> GetCoreFieldMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->GetCoreFieldMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->GetCoreFieldMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->GetCoreFieldMappingsForProductEntity");
            }

            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }

            localVarRequestOptions.Operation = "VendorApi.GetCoreFieldMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<LusidField>>("/api/vendor/mappings/fields", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCoreFieldMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;LusidField&gt;</returns>
        public async System.Threading.Tasks.Task<List<LusidField>> GetCoreFieldMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidField>> localVarResponse = await GetCoreFieldMappingsForProductEntityWithHttpInfoAsync(vendorName, productName, lusidEntityType, lusidEntitySubType, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] GetCoreFieldMappingsForProductEntity: Get core field mappings for a given vendor product&#39;s entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;LusidField&gt;)</returns>
        public async System.Threading.Tasks.Task<Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidField>>> GetCoreFieldMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->GetCoreFieldMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->GetCoreFieldMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->GetCoreFieldMappingsForProductEntity");
            }


            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }

            localVarRequestOptions.Operation = "VendorApi.GetCoreFieldMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<LusidField>>("/api/vendor/mappings/fields", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCoreFieldMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;</returns>
        public Dictionary<string, LusidPropertyDefinitionOverrides> GetOptionalMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverrides>> localVarResponse = GetOptionalMappingsForProductEntityWithHttpInfo(vendorName, productName, lusidEntityType, lusidEntitySubType);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;</returns>
        public Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverrides>> GetOptionalMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->GetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->GetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->GetOptionalMappingsForProductEntity");
            }

            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }

            localVarRequestOptions.Operation = "VendorApi.GetOptionalMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Dictionary<string, LusidPropertyDefinitionOverrides>>("/api/vendor/mappings/optional", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetOptionalMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;</returns>
        public async System.Threading.Tasks.Task<Dictionary<string, LusidPropertyDefinitionOverrides>> GetOptionalMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverrides>> localVarResponse = await GetOptionalMappingsForProductEntityWithHttpInfoAsync(vendorName, productName, lusidEntityType, lusidEntitySubType, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] GetOptionalMappingsForProductEntity: Get a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, LusidPropertyDefinitionOverrides&gt;)</returns>
        public async System.Threading.Tasks.Task<Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverrides>>> GetOptionalMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->GetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->GetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->GetOptionalMappingsForProductEntity");
            }


            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }

            localVarRequestOptions.Operation = "VendorApi.GetOptionalMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Dictionary<string, LusidPropertyDefinitionOverrides>>("/api/vendor/mappings/optional", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetOptionalMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;LusidPropertyToVendorFieldMapping&gt;</returns>
        public List<LusidPropertyToVendorFieldMapping> GetPropertyMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidPropertyToVendorFieldMapping>> localVarResponse = GetPropertyMappingsForProductEntityWithHttpInfo(vendorName, productName, lusidEntityType, lusidEntitySubType);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;LusidPropertyToVendorFieldMapping&gt;</returns>
        public Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidPropertyToVendorFieldMapping>> GetPropertyMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->GetPropertyMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->GetPropertyMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->GetPropertyMappingsForProductEntity");
            }

            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }

            localVarRequestOptions.Operation = "VendorApi.GetPropertyMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<LusidPropertyToVendorFieldMapping>>("/api/vendor/mappings/properties", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetPropertyMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;LusidPropertyToVendorFieldMapping&gt;</returns>
        public async System.Threading.Tasks.Task<List<LusidPropertyToVendorFieldMapping>> GetPropertyMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidPropertyToVendorFieldMapping>> localVarResponse = await GetPropertyMappingsForProductEntityWithHttpInfoAsync(vendorName, productName, lusidEntityType, lusidEntitySubType, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] GetPropertyMappingsForProductEntity: Gets the property mappings for a given vendor product&#39;s entity 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;LusidPropertyToVendorFieldMapping&gt;)</returns>
        public async System.Threading.Tasks.Task<Finbourne.Horizon.Sdk.Client.ApiResponse<List<LusidPropertyToVendorFieldMapping>>> GetPropertyMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->GetPropertyMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->GetPropertyMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->GetPropertyMappingsForProductEntity");
            }


            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }

            localVarRequestOptions.Operation = "VendorApi.GetPropertyMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<LusidPropertyToVendorFieldMapping>>("/api/vendor/mappings/properties", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetPropertyMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PagedResourceListOfVendorProduct</returns>
        public PagedResourceListOfVendorProduct QueryVendors(QueryRequest queryRequest, int operationIndex = 0)
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<PagedResourceListOfVendorProduct> localVarResponse = QueryVendorsWithHttpInfo(queryRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PagedResourceListOfVendorProduct</returns>
        public Finbourne.Horizon.Sdk.Client.ApiResponse<PagedResourceListOfVendorProduct> QueryVendorsWithHttpInfo(QueryRequest queryRequest, int operationIndex = 0)
        {
            // verify the required parameter 'queryRequest' is set
            if (queryRequest == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'queryRequest' when calling VendorApi->QueryVendors");
            }

            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json-patch+json",
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = queryRequest;

            localVarRequestOptions.Operation = "VendorApi.QueryVendors";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PagedResourceListOfVendorProduct>("/api/vendor/$query", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QueryVendors", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PagedResourceListOfVendorProduct</returns>
        public async System.Threading.Tasks.Task<PagedResourceListOfVendorProduct> QueryVendorsAsync(QueryRequest queryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<PagedResourceListOfVendorProduct> localVarResponse = await QueryVendorsWithHttpInfoAsync(queryRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] QueryVendors: Query for vendors and their packages with entities and sub-entities. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PagedResourceListOfVendorProduct)</returns>
        public async System.Threading.Tasks.Task<Finbourne.Horizon.Sdk.Client.ApiResponse<PagedResourceListOfVendorProduct>> QueryVendorsWithHttpInfoAsync(QueryRequest queryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'queryRequest' is set
            if (queryRequest == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'queryRequest' when calling VendorApi->QueryVendors");
            }


            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = queryRequest;

            localVarRequestOptions.Operation = "VendorApi.QueryVendors";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PagedResourceListOfVendorProduct>("/api/vendor/$query", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("QueryVendors", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;</returns>
        public Dictionary<string, LusidPropertyDefinitionOverridesResponse> SetOptionalMappingsForProductEntity(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverridesResponse>> localVarResponse = SetOptionalMappingsForProductEntityWithHttpInfo(vendorName, productName, lusidEntityType, requestBody, lusidEntitySubType);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;</returns>
        public Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverridesResponse>> SetOptionalMappingsForProductEntityWithHttpInfo(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'requestBody' is set
            if (requestBody == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'requestBody' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }

            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json-patch+json",
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }
            localVarRequestOptions.Data = requestBody;

            localVarRequestOptions.Operation = "VendorApi.SetOptionalMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Dictionary<string, LusidPropertyDefinitionOverridesResponse>>("/api/vendor/mappings/optional", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SetOptionalMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;</returns>
        public async System.Threading.Tasks.Task<Dictionary<string, LusidPropertyDefinitionOverridesResponse>> SetOptionalMappingsForProductEntityAsync(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverridesResponse>> localVarResponse = await SetOptionalMappingsForProductEntityWithHttpInfoAsync(vendorName, productName, lusidEntityType, requestBody, lusidEntitySubType, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// [EARLY ACCESS] SetOptionalMappingsForProductEntity: Create a user defined LUSID property mappings for the specified vendor / LUSID entity. 
        /// </summary>
        /// <exception cref="Finbourne.Horizon.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="vendorName"></param>
        /// <param name="productName"></param>
        /// <param name="lusidEntityType"></param>
        /// <param name="requestBody"></param>
        /// <param name="lusidEntitySubType"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, LusidPropertyDefinitionOverridesResponse&gt;)</returns>
        public async System.Threading.Tasks.Task<Finbourne.Horizon.Sdk.Client.ApiResponse<Dictionary<string, LusidPropertyDefinitionOverridesResponse>>> SetOptionalMappingsForProductEntityWithHttpInfoAsync(string vendorName, string productName, string lusidEntityType, Dictionary<string, LusidPropertyDefinitionOverrides> requestBody, string? lusidEntitySubType = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'vendorName' is set
            if (vendorName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'vendorName' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'productName' is set
            if (productName == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'productName' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'lusidEntityType' is set
            if (lusidEntityType == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'lusidEntityType' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }

            // verify the required parameter 'requestBody' is set
            if (requestBody == null)
            {
                throw new Finbourne.Horizon.Sdk.Client.ApiException(400, "Missing required parameter 'requestBody' when calling VendorApi->SetOptionalMappingsForProductEntity");
            }


            Finbourne.Horizon.Sdk.Client.RequestOptions localVarRequestOptions = new Finbourne.Horizon.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Finbourne.Horizon.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "vendorName", vendorName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "productName", productName));
            localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntityType", lusidEntityType));
            if (lusidEntitySubType != null)
            {
                localVarRequestOptions.QueryParameters.Add(Finbourne.Horizon.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lusidEntitySubType", lusidEntitySubType));
            }
            localVarRequestOptions.Data = requestBody;

            localVarRequestOptions.Operation = "VendorApi.SetOptionalMappingsForProductEntity";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (oauth2) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Dictionary<string, LusidPropertyDefinitionOverridesResponse>>("/api/vendor/mappings/optional", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SetOptionalMappingsForProductEntity", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}